<?php

namespace App\Controller\Admin;

use App\Entity\Partner;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ImageField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;

class PartnerCrudController extends AbstractCrudController
{
    public const PARTNER_BASE_PATH = 'uploads/partners/';
    public const PARTNER_UPLOAD_DIR = 'public/uploads/partners/';

    public static function getEntityFqcn(): string
    {
        return Partner::class;
    }


    public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        if(!$entityInstance instanceof Partner) {
            return;
        }

        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub

    }

    public function configureFields(string $pageName): iterable
    {
        yield IdField::new('id')
            ->onlyOnIndex();

        yield TextField::new('title');

        yield TextField::new('url');



        yield ImageField::new('logo')
            ->formatValue(static function ($value, ?Partner $partner) {
                return $partner?->getLogo();
            })
            ->setBasePath(self::PARTNER_BASE_PATH)
            ->setUploadDir(self::PARTNER_UPLOAD_DIR)
            ->setUploadedFileNamePattern(self::PARTNER_BASE_PATH.'[slug]-[timestamp].[extension]');


    }

    public function configureCrud(Crud $crud): Crud
    {
        return parent::configureCrud($crud)
            ->showEntityActionsInlined()
            ->setDefaultSort([
                'title' => 'ASC',
            ]);
    }
}
