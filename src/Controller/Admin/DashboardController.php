<?php

namespace App\Controller\Admin;


use App\Entity\Demand;
use App\Entity\User;
use App\Entity\Department;
use App\Entity\Employee;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Config\Dashboard;
use EasyCorp\Bundle\EasyAdminBundle\Config\MenuItem;
use EasyCorp\Bundle\EasyAdminBundle\Config\UserMenu;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractDashboardController;
use EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Http\Attribute\IsGranted;

class DashboardController extends AbstractDashboardController
{
    /**
     * @throws \Psr\Container\ContainerExceptionInterface
     * @throws \Psr\Container\NotFoundExceptionInterface
     */
    #[IsGranted('ROLE_ADMIN')]
    #[Route('/admin', name: 'app_admin')]
    public function index(): Response
    {
        $routeBuilder = $this->container->get(AdminUrlGenerator::class);
        $url = $routeBuilder->setController(EmployeeCrudController::class)->generateUrl();

        return $this->redirect($url);
    }

    public function configureDashboard(): Dashboard
    {
        return Dashboard::new()
            ->setTitle('Welcome to Encore');
    }

    public function configureMenuItems(): iterable
    {
        yield MenuItem::linkToDashboard('Dashboard', 'fa fa-home');
        yield MenuItem::linktoUrl('Back to the website', 'fas fa-home', $this->generateUrl('app_home'));
        yield MenuItem::linkToCrud('Employees', 'fas fa-users', Employee::class);
        yield MenuItem::linkToCrud('Departments', 'fas fa-list', Department::class);
        yield MenuItem::linkToCrud('Demands', 'fas fa-person-circle-question', Demand::class);
    }

    public function configureActions(): Actions
    {
        return parent::configureActions() // TODO: Change the autogenerated stub
            ->add(Crud::PAGE_INDEX, Action::DETAIL);
    }

    public function configureUserMenu(UserInterface $user): UserMenu
    {
        return parent::configureUserMenu($user)
        //->setAvatarUrl($user->getAvatarUrl())
            ->addMenuItems([
             //   MenuItem::linkToCrud('My profile', 'fas-fa-user', Employee::class, [$user->getId()])),
            ]);
    }


}
